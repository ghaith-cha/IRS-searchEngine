https://en.wikipedia.org/wiki/Software_license
Public domain
Permissive licence
Copyleft (protective licence)
Noncommercial licence
Proprietary licence
Trade secret
Description
Grants all rights
Grants use rights, including right to relicense (allows proprietisation, license compatibility)
Grants use rights, forbids proprietisation
Grants rights for noncommercial use only. May be combined with copyleft.
Traditional use of copyright; no rights need be granted
No information made public
Software
PD, CC0
MIT, Apache, MPL
GPL, AGPL
JRL, AFPL
proprietary software, no public licence
private, internal software
Other creative works
PD, CC0
CC-BY
CC-BY-SA
CC-BY-NC
Copyright, no public licence
unpublished
A software licence is a legal instrument (usually by way of contract law, with or without printed material) governing the use or redistribution of software. Under United States copyright law, all software is copyright protected, in both source code and object code forms, unless that software was developed by the United States Government, in which case it cannot be copyrighted.[1] Authors of copyrighted software can donate their software to the public domain, in which case it is also not covered by copyright and, as a result, cannot be licensed.
A typical software licence grants the licensee, typically an end-user, permission to use one or more copies of software in ways where such a use would otherwise potentially constitute copyright infringement of the software owner's exclusive rights under copyright.
Contents
1 Software licenses and copyright law
1.1 Ownership vs. licensing
2 Proprietary software licenses
3 Free and open-source software licenses
4 See also
5 References
6 External links
Software licenses and copyright law[edit]
Most distributed software can be categorized according to its license type (see table).
Two common categories for software under copyright law, and therefore with licenses which grant the licensee specific rights, are proprietary software and free and open-source software (FOSS). The distinct conceptual difference between the two is the granting of rights to modify and re-use a software product obtained by a customer: FOSS software licenses both rights to the customer and therefore bundles the modifiable source code with the software ("open-source"), while proprietary software typically does not license these rights and therefore keeps the source code hidden ("closed source").
In addition to granting rights and imposing restrictions on the use of copyrighted software, software licenses typically contain provisions which allocate liability and responsibility between the parties entering into the license agreement. In enterprise and commercial software transactions, these terms often include limitations of liability, warranties and warranty disclaimers, and indemnity if the software infringes intellectual property rights of anyone.
Unlicensed software outside the scope of copyright protection is either public domain software (PD) or software which is non-distributed, non-licensed and handled as internal business trade secret.[2] Contrary to popular belief, distributed unlicensed software (not in the public domain) is fully copyright protected, and therefore legally unusable (as no usage rights at all are granted by a license) until it passes into public domain after the copyright term has expired.[3] Examples of this are unauthorized software leaks or software projects which are placed on public software repositories like GitHub without a specified license.[4][5] As voluntarily handing software into the public domain (before reaching the copyright term) is problematic in some jurisdictions (for instance the Law of Germany), there are also licenses granting PD-like rights, for instance the CC0 or WTFPL.[6]
Software licenses and rights granted in context of the copyright according to Mark Webbink.[2] Expanded by freeware and sublicensing.
Rights granted
Public domain
Permissive FOSS
license (e.g. BSD license)
Copyleft FOSS
license (e.g. GPL)
Freeware/Shareware/
Freemium
Proprietary license
Trade secret
Copyright retained
No
Yes
Yes
Yes
Yes
Very strict
Right to perform
Yes
Yes
Yes
Yes
Yes
No
Right to display
Yes
Yes
Yes
Yes
Yes
No
Right to copy
Yes
Yes
Yes
Often
No
Lawsuits are filed by the owner against copyright infringement the most
Right to modify
Yes
Yes
Yes
No
No
No
Right to distribute
Yes
Yes, under same license
Yes, under same license
Often
No
No
Right to sublicense
Yes
Yes
No
No
No
No
Example software
SQLite, ImageJ
Apache web server, ToyBox
Linux kernel, GIMP, OBS
Irfanview, Winamp, League of Legends
Windows, the majority of commercial video games and their DRMs, Spotify, xSplit, TIDAL
Server-side
Cloud computing programs and services,
forensic applications, and other line-of-business work.
Ownership vs. licensing[edit]
Many proprietary or open source software houses sell the SW copy with a license to use it. There isn't any transferring of ownership of the good to the user, which hasn't the warranty of a for life availability of the software, nor isn't entitled to sell, rent, give it to someone, copy or redistribute it on the Web. License terms and conditions may specify further legal clauses that users can't negotiate individually or by way of a consumer organization, and can uniquely accept or refuse, returning the product back to the vendor.[7] This right can be effectively applied where the jurisdiction provides a mandatory time for the good decline right after the purchase (as in the European Union law), or a mandatory public advertisement of the license terms, so as to be made readable by users before their purchasing.
In the United States, Section 117 of the Copyright Act gives the owner of a particular copy of software the explicit right to use the software with a computer, even if use of the software with a computer requires the making of incidental copies or adaptations (acts which could otherwise potentially constitute copyright infringement). Therefore, the owner of a copy of computer software is legally entitled to use that copy of software. Hence, if the end-user of software is the owner of the respective copy, then the end-user may legally use the software without a license from the software publisher.
As many proprietary "licenses" only enumerate the rights that the user already has under 17 U.S.C. § 117,[citation needed] and yet proclaim to take rights away from the user, these contracts may lack consideration. Proprietary software licenses often proclaim to give software publishers more control over the way their software is used by keeping ownership of each copy of software with the software publisher. By doing so, Section 117 does not apply to the end-user and the software publisher may then compel the end-user to accept all of the terms of the license agreement, many of which may be more restrictive than copyright law alone. The form of the relationship determines if it is a lease or a purchase, for example UMG v. Augusto[8] or Vernor v. Autodesk, Inc.[9][10]
The ownership of digital goods, like software applications and video games, is challenged by "licensed, not sold" EULAs of digital distributors like Steam.[11] In the European Union, the European Court of Justice held that a copyright holder cannot oppose the resale of a digitally sold software, in accordance with the rule of copyright exhaustion on first sale as ownership is transferred, and questions therefore the "licensed, not sold" EULA.[12][13][14][15][16][17] The Swiss-based company UsedSoft innovated the resale of business software and fought for this right in court.[18] In Europe, EU Directive 2009/24/EC expressly permits trading used computer programs.[19]
Proprietary software licenses[edit]
Main article: Proprietary software
Further information: End-user license agreement
The hallmark of proprietary software licenses is that the software publisher grants the use of one or more copies of software under the end-user license agreement (EULA), but ownership of those copies remains with the software publisher (hence use of the term "proprietary"). This feature of proprietary software licenses means that certain rights regarding the software are reserved by the software publisher. Therefore, it is typical of EULAs to include terms which define the uses of the software, such as the number of installations allowed or the terms of distribution.
The most significant effect of this form of licensing is that, if ownership of the software remains with the software publisher, then the end-user must accept the software license. In other words, without acceptance of the license, the end-user may not use the software at all. One example of such a proprietary software license is the license for Microsoft Windows. As is usually the case with proprietary software licenses, this license contains an extensive list of activities which are restricted, such as: reverse engineering, simultaneous use of the software by multiple users, and publication of benchmarks or performance tests.
The most common licensing models are per single user (named user, client, node) or per user in the appropriate volume discount level, while some manufacturers accumulate existing licenses. These open volume license programs are typically called open license program (OLP), transactional license program (TLP), volume license program (VLP) etc. and are contrary to the contractual license program (CLP), where the customer commits to purchase a certain number of licenses over a fixed period (mostly two years). Licensing per concurrent/floating user also occurs, where all users in a network have access to the program, but only a specific number at the same time. Another license model is licensing per dongle, which allows the owner of the dongle to use the program on any computer. Licensing per server, CPU or points, regardless the number of users, is common practice, as well as site or company licenses. Sometimes one can choose between perpetual (permanent) and annual license. For perpetual licenses, one year of maintenance is often required, but maintenance (subscription) renewals are discounted. For annual licenses, there is no renewal; a new license must be purchased after expiration. Licensing can be host/client (or guest), mailbox, IP address, domain etc., depending on how the program is used. Additional users are inter alia licensed per extension pack (e.g. up to 99 users), which includes the base pack (e.g. 5 users). Some programs are modular, so one will have to buy a base product before they can use other modules.[20]
Software licensing often also includes maintenance. This, usually with a term of one year, is either included or optional, but must often be bought with the software. The maintenance agreement (contract) typically contains a clause that allows the licensee to receive minor updates (V.1.1 => 1.2), and sometimes major updates (V.1.2 => 2.0). This option is usually called update insurance or upgrade assurance. For a major update, the customer has to buy an upgrade, if it is not included in the maintenance agreement. For a maintenance renewal, some manufacturers charge a reinstatement (reinstallment) fee retroactively per month, in the event that the current maintenance has expired.
Maintenance sometimes includes technical support. When it does, the level of technical support, which are commonly named gold, silver and bronze, can vary depending on the communication method (i.e. e-mail versus telephone support), availability (e.g. 5x8, 5 days a week, 8 hours a day) and reaction time (e.g. three hours). Support is also licensed per incident as an incident pack (e.g. five support incidents per year).[20]
Many manufacturers offer special conditions for schools and government agencies (EDU/GOV license). Migration from another product (crossgrade), even from a different manufacturer (competitive upgrade) is offered.[20]
Free and open-source software licenses[edit]
Diagram of software under various licenses according to the FSF and their The Free Software Definition: on the left side "free software", on the right side "proprietary software". On both sides, and therefore mostly orthogonal, "free download" (Freeware).
Main articles: Free software license and Open source software license
There are several organizations in the FOSS domain who give out guidelines and definitions regarding software licenses. Free Software Foundation maintains non-exhaustive lists of software licenses following their The Free Software Definition and licenses which the FSF considers non-free for various reasons.[21] The FSF distinguishes additionally between free software licenses that are compatible or incompatible with the FSF license of choice, the copyleft GNU General Public License. The Open Source Initiative defines a list of certified open-source licenses following their The Open Source Definition.[22] Also the Debian project has a list of licenses which follow their Debian Free Software Guidelines.[23]
Free and open-source licenses are commonly classified into two categories: Those with the aim to have minimal requirements about how the software can be redistributed (permissive licenses), and the protective share-alike (copyleft Licenses).
An example of a copyleft free software license is the often used GNU General Public License (GPL), also the first copyleft license. This license is aimed at giving and protecting all users unlimited freedom to use, study, and privately modify the software, and if the user adheres to the terms and conditions of the GPL, freedom to redistribute the software or any modifications to it. For instance, any modifications made and redistributed by the end-user must include the source code for these, and the license of any derivative work must not put any additional restrictions beyond what the GPL allows.[24]
Examples of permissive free software licenses are the BSD license and the MIT license, which give unlimited permission to use, study, and privately modify the software, and includes only minimal requirements on redistribution. This gives a user the permission to take the code and use it as part of closed-source software or software released under a proprietary software license.
It was under debate some time if public domain software and public domain-like licenses can be considered as a kind of FOSS license. Around 2004 lawyer Lawrence Rosen argued in the essay "Why the public domain isn't a license" software could not truly be waived into public domain and can't therefore be interpreted as very permissive FOSS license,[25] a position which faced opposition by Daniel J. Bernstein and others.[26] In 2012 the dispute was finally resolved when Rosen accepted the CC0 as an open source license, while admitting that contrary to his previous claims, copyright can be waived away, backed by Ninth circuit decisions.[27]
See also[edit]
Comparison of free and open-source software licenses
Digital rights management
Copy protection
Dual-licensing
Index of Articles Relating to Terms of Service and Privacy Policies
License-free software
License manager
Product activation
Product key
Rights Expression Language
Software metering
Terms of service
Perpetual access
Copyright licenses (category)
Software by license (category)
References[edit]
^ Hancock, Terry (2008-08-29). "What if copyright didn't apply to binary executables?". Free Software Magazine. Retrieved 2016-01-25.
.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .citation .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-ws-icon a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Wikisource-logo.svg/12px-Wikisource-logo.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-maint{display:none;color:#33aa33;margin-left:0.3em}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}
^ a b Larry Troan (2005). "Open Source from a Proprietary Perspective" (PDF). RedHat Summit 2006 Nashville. redhat.com. p. 10. Archived from the original (pdf) on 2014-01-22. Retrieved 2015-12-29.
^ Pick a License, Any License on codinghorror by Jeff Atwood
^ github-finally-takes-open-source-licenses-seriously on infoworld.com by Simon Phipps (July 13, 2013)
^ Post open source software, licensing and GitHub on opensource.com by Richard Fontana (13 Aug 2013)
^ Validity of the Creative Commons Zero 1.0 Universal Public Domain Dedication and its usability for bibliographic metadata from the perspective of German Copyright Law by Dr. Till Kreutzer, attorney-at-law in Berlin, Germany
^ "The difference between ownership transfer (purchased) and licensing software". Allbusiness.com. Archived from the original on 12 June 2016.
^ "UMG v. Augusto". January 28, 2009.
^ "Court smacks Autodesk, affirms right to sell used software". Ars Technica. May 23, 2008.
^ "Vernor v. Autodesk". 2007-11-14.
^ Walker, John (2012-02-01). "Thought: Do We Own Our Steam Games?". Rock, Paper, Shotgun. Retrieved 2014-12-27. I asked gamer lawyer Jas Purewal about this a short while back, not specifically about Valve, and he explained that the matter is still unresolved. “In fact,” he says, “it’s never been completely resolved for software generally[...]"
^ Purewal, Jas. "The legality of second hand software sales in the EU". gamerlaw.co.uk.
(mirror on gamasutra.com)
^ hg/mz (AFP, dpa) (2012-07-03). "Oracle loses court fight over software resale rules". dw.de. Retrieved 2014-12-30. A European court has ruled that it's permissible to resell software licenses even if the package has been downloaded directly from the Internet. It sided with a German firm in its legal battle with US giant Oracle.
^ Voakes, Greg (2012-07-03). "European Courts Rule In Favor Of Consumers Reselling Downloaded Games". forbes.com. Retrieved 2014-12-30. Could this be the victory we need for a “gamer’s bill of rights” ? DRM is an oft-cited acronym, and resonates negatively in the gaming community. The Court of Justice of the European Union ruled in favor of reselling downloaded games. Simply put, legally purchased and downloaded games will be treated like physical copies of the game, and consumers can then sell their ‘used’ game.
^ "JUDGMENT OF THE COURT (Grand Chamber)". InfoCuria – Case-law of the Court of Justice. 2012-07-03. Retrieved 2014-12-30. (Legal protection of computer programs — Marketing of used licences for computer programs downloaded from the internet — Directive 2009/24/EC — Articles 4(2) and 5(1) — Exhaustion of the distribution right — Concept of lawful acquirer)
^ Timothy B. Lee (2012-07-03). "Top EU court upholds right to resell downloaded software". Ars Technica.
^ "EU Court OKs Resale of Software Licenses". AP.
^ ecj-usedsoft-ruling
^ Directive 2009/24/EC of the European Parliament and the Council. Official Journal of the European Union Accessed on 14 March 2014.
^ a b c Scholten, Thomas. "Software Licensing". Retrieved 21 May 2012.
^ License list – Free Software Foundation
^ Open Source Licenses by Category on opensource.org
^ DFSGLicenses on debian.org
^ "The GNU General Public License v3.0 – GNU Project – Free Software Foundation (FSF)". fsf.org. Retrieved 24 March 2010.
^ Lawrence Rosen (2004-05-25). "Why the public domain isn't a license". rosenlaw.com. Retrieved 2016-02-22.
^ Placing documents into the public domain by Daniel J. Bernstein on cr.yp.to "Most rights can be voluntarily abandoned ("waived") by the owner of the rights. Legislators can go to extra effort to create rights that can't be abandoned, but usually they don't do this. In particular, you can voluntarily abandon your United States copyrights: "It is well settled that rights gained under the Copyright Act may be abandoned. But abandonment of a right must be manifested by some overt act indicating an intention to abandon that right. See Hampton v. Paramount Pictures Corp., 279 F.2d 100, 104 (9th Cir. 1960)."" (2004)
^ Lawrence Rosen (2012-03-08). "(License-review) (License-discuss) CC0 incompliant with OSD on patents, (was: MXM compared to CC0)". opensource.org. Archived from the original on 2016-03-12. The case you referenced in your email, Hampton v. Paramount Pictures, 279 F.2d 100 (9th Cir. Cal. 1960), stands for the proposition that, at least in the Ninth Circuit, a person can indeed abandon his copyrights (counter to what I wrote in my article) -- but it takes the equivalent of a manifest license to do so. :-)[...] For the record, I have already voted +1 to approve the CC0 public domain dedication and fallback license as OSD compliant. I admit that I have argued for years against the "public domain" as an open source license, but in retrospect, considering the minimal risk to developers and users relying on such software and the evident popularity of that "license", I changed my mind. One can't stand in the way of a fire hose of free public domain software, even if it doesn't come with a better FOSS license that I trust more.
External links[edit]
Wikibooks has a book on the topic of: FOSS Licensing
Software licensing for a small ISV and the issue of open source by Dan Bricklin
Definition of software licensing at the Wayback Machine (archived July 21, 2011) by Jon Gillespie-Brown at knol.google.de
Why product activation for software is becoming widespread at the Wayback Machine (archived July 21, 2011) knol.google.com
"Relationships between different types of licenses Free and Non-Free". Free Software Foundation
"Various Licenses and Comments about Them". Free Software Foundation.
Open Source and Freeware best practices
The Challenges of Licensing The Knowledge Net of Software Licensing on omtco.eu
v
t
e
Software distribution
Licenses
Beerware
Floating licensing
Free and open-source
Free
Open source
Freely redistributable
Proprietary
Public domain
Source-available
Compensation models
Adware
Commercial software
Retail software
Crippleware
Crowdfunding
Freemium
Freeware
Pay what you want
Careware
Donationware
Open-core model
Postcardware
Shareware
Nagware
Delivery methods
Digital distribution
File sharing
On-premises
Pre-installed
Product bundling
Retail software
Sneakernet
Software as a service
Deceptive and/or illicit
Unwanted software bundling
Malware
Spyware
Trojan horse
Worm
Ransomware
Scareware
Shovelware
Vaporware
Software release life cycle
Abandonware
End-of-life
Long-term support
Software maintenance
Software maintainer
Software publisher
Copy protection
Digital rights management
Software protection dongle
Hardware restrictions
License manager
Product activation
Product key
Software copyright
Software patent
Torrent poisoning